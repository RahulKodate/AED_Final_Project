/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.GovernmentOfficial;

import java.util.Properties;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;

import Business.Organization.Organization;
import Business.Organization.SensorMonitorOrganization;
import Business.Organization.GovernmentOfficialOrganization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.CitizenOrganization;
import Business.Sensor.CycloneStormSensor;
import Business.Sensor.Sensor;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.CitizenWorkRequest;
import Business.WorkQueue.GovernmentWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moins
 */
public class GovernmentOfficialCycloneStormQueueJPanel extends javax.swing.JPanel {

    private OrganizationDirectory directory;
    private UserAccount userAccount;
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem business;
    private GovernmentOfficialOrganization organization; 
    /**
     * Creates new form GovernmentOfficialWorkQueueJPanel
     */
    public GovernmentOfficialCycloneStormQueueJPanel(JPanel userProcessContainer, UserAccount userAccount, Enterprise enterprise, OrganizationDirectory directory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        this.directory = directory;
        this.enterprise = enterprise;
        
        this.business = business;
        
        populateTable();
    }

    public void populateTable(){
        GovernmentWorkRequest gov_wrs = null;
        DefaultTableModel model = (DefaultTableModel) tblWorkQueue.getModel();
        model.setRowCount(0);
        
        for(Organization organization : directory.getOrganizationList())
        {
        for (WorkRequest wr : organization.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof GovernmentWorkRequest)
            {                
                gov_wrs = (GovernmentWorkRequest)wr;
            
                if(gov_wrs.getCycloneStormSensor() != null)
                {
                Object[] row = new Object[3];
                row[0] = gov_wrs;
                row[1] = gov_wrs.getSender().getUsername();
                row[2] = gov_wrs.getCycloneStormMessage();
                model.addRow(row);
                }
            }
        }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MessagejLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblWorkQueue = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnResolve = new javax.swing.JButton();
        btnAlert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(222, 222, 248));
        setLayout(null);

        jLabel1.setBackground(new java.awt.Color(193, 243, 243));
        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(91, 130, 170));
        jLabel1.setText("Cyclone Storm ");
        add(jLabel1);
        jLabel1.setBounds(600, 160, 190, 50);

        MessagejLabel.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        MessagejLabel.setForeground(new java.awt.Color(255, 0, 51));
        add(MessagejLabel);
        MessagejLabel.setBounds(663, 446, 0, 0);

        tblWorkQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Work_request_Id", "Sender", "Mesage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblWorkQueue);

        add(jScrollPane2);
        jScrollPane2.setBounds(40, 200, 720, 160);

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(10, 20, 100, 40);

        btnResolve.setBackground(new java.awt.Color(166, 202, 166));
        btnResolve.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btnResolve.setForeground(new java.awt.Color(255, 255, 255));
        btnResolve.setText("Send Resolved Notification");
        btnResolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResolveActionPerformed(evt);
            }
        });
        add(btnResolve);
        btnResolve.setBounds(430, 440, 350, 50);

        btnAlert.setBackground(new java.awt.Color(202, 150, 160));
        btnAlert.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        btnAlert.setForeground(new java.awt.Color(255, 255, 255));
        btnAlert.setText("Send Alert Notification to Residents");
        btnAlert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlertActionPerformed(evt);
            }
        });
        add(btnAlert);
        btnAlert.setBounds(40, 440, 350, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Organization4.jpeg"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(0, 120, 1120, 590);

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(91, 130, 170));
        jLabel3.setText("Government Official Work Queue ");
        add(jLabel3);
        jLabel3.setBounds(0, 80, 760, 57);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        JPanel panel = new GovernmentOfficialWorkAreaJPanel(userProcessContainer,userAccount,organization, enterprise,business);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnResolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResolveActionPerformed
        // TODO add your handling code here:
        int row = tblWorkQueue.getSelectedRow();
        if(row <0){
            JOptionPane.showMessageDialog(null, "No row selected");
        }else{
        
        GovernmentWorkRequest request = (GovernmentWorkRequest)tblWorkQueue.getValueAt(row, 0);
        
        CitizenWorkRequest citizenWorkRequest = new CitizenWorkRequest();
        
        citizenWorkRequest.setCycloneStormSensor(request.getCycloneStormSensor());
        citizenWorkRequest.setCycloneStormMessage("Area-code "+request.getCycloneStormSensor().getZipcode()+"is relieved from Cyclone & Storm.");
        
        citizenWorkRequest.setSender(userAccount);
        citizenWorkRequest.setStatus("Message Sent to Citizens");
        
        Organization orgn = null;
        Organization orgn1 = null;
                for(Organization org : directory.getOrganizationList())
                {
            //System.out.println(org.getName());
            if (org instanceof GovernmentOfficialOrganization){
                orgn = org;
                break;
            }
           
            } 
                for(Organization org1 : directory.getOrganizationList())
                {
                if(org1 instanceof CitizenOrganization){
                orgn1 = org1;
                break;
            
            } }
        if (orgn!=null){
            try {
            orgn.getWorkQueue().getWorkRequestList().add(citizenWorkRequest);
            userAccount.getWorkQ().getWorkRequestList().add(citizenWorkRequest);
            return;
            } catch (Exception e) {
            }
 
        }
        
        if (orgn1!=null){    
            try {
            orgn1.getWorkQueue().getWorkRequestList().add(citizenWorkRequest);
            userAccount.getWorkQ().getWorkRequestList().add(citizenWorkRequest);
            return;
            } catch (Exception e) {
            }
           
        }
         JOptionPane.showMessageDialog(null, "Request Sent to Citizen");
        }
    }//GEN-LAST:event_btnResolveActionPerformed

    private void btnAlertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlertActionPerformed
        // TODO add your handling code here:
        int row = tblWorkQueue.getSelectedRow();
        if(row <0){
            JOptionPane.showMessageDialog(null, "No row selected");
        }else{
        
        GovernmentWorkRequest request = (GovernmentWorkRequest)tblWorkQueue.getValueAt(row, 0);
        
        CitizenWorkRequest citizenWorkRequest = new CitizenWorkRequest();
        
        citizenWorkRequest.setCycloneStormSensor(request.getCycloneStormSensor());
        citizenWorkRequest.setCycloneStormMessage("Area-code "+request.getCycloneStormSensor().getZipcode()+" is affected by Cyclone & Storm! Please avoid this area until further notice");
        citizenWorkRequest.setSender(userAccount);
        citizenWorkRequest.setStatus("Message Sent to Citizens");
        
        Organization orgn = null;
        Organization orgn1 = null;
                for(Organization org : directory.getOrganizationList())
                {
            //System.out.println(org.getName());
            if (org instanceof GovernmentOfficialOrganization){
                orgn = org;
                break;
            }
           
            } 
                for(Organization org1 : directory.getOrganizationList())
                {
                if(org1 instanceof CitizenOrganization){
                orgn1 = org1;
                break;
            
            } }
        if (orgn!=null){
            try {
                orgn.getWorkQueue().getWorkRequestList().add(citizenWorkRequest);
            userAccount.getWorkQ().getWorkRequestList().add(citizenWorkRequest);
            return;
            } catch (Exception e) {
            }
            
        }
        
        if (orgn1!=null){            
            try {
                  orgn1.getWorkQueue().getWorkRequestList().add(citizenWorkRequest);
            userAccount.getWorkQ().getWorkRequestList().add(citizenWorkRequest);
            return;
            } catch (Exception e) {
            }
          
        }
         JOptionPane.showMessageDialog(null, "Request Sent to Citizen");
        }
    }//GEN-LAST:event_btnAlertActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MessagejLabel;
    private javax.swing.JButton btnAlert;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnResolve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblWorkQueue;
    // End of variables declaration//GEN-END:variables
}
